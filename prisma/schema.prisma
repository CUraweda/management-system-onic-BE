// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model m_user {
  u_id                 Int             @id @default(autoincrement())
  u_name               String
  branch_id             Int?
  division_id           Int?
  // u_code               String?
  u_email              String          @unique
  u_password           String?
  title                String?
  division             String?
  branch               String?
  // u_token              String?
  // u_phone              Int?
  // u_gender             String?
  // u_date_of_birth      DateTime?
  // u_address            String?
  // u_province_id        String?
  // u_city_id            String?
  u_rate               Int?            @default(0)
  total_task           Int?            @default(0)
  lastSeenNotification DateTime?
  deleted              Boolean         @default(false)
  created_at           DateTime?       @default(now())
  updated_at           DateTime?       @updatedAt
  uploadHistory        uploadHistory[]
}

// i change the name for branch & division
model Branch {
  id          Int       @id @default(autoincrement())
  divisions   Division[] // Cabang dapat memiliki lebih dari satu divisi
  b_name      String?
}

model Division {
  id          Int      @id @default(autoincrement())
  branch      Branch   @relation(fields: [branch_id], references: [id])
  branch_id   Int      
  d_name      String?
}

model task {
  id           Int            @id @default(autoincrement())
  pic_id       Int?
  spv_id       Int?
  branch_id    Int?
  division_id  Int?
  branch       String?
  task_type    String?
  task_title   String?
  priority     String?
  iteration    String?
  start_date   DateTime?
  due_date     DateTime?
  description  String?        @db.Text
  pic_title    String?
  pic          String?
  pic_rating   Int?
  spv          String?
  division     String?
  approved_at  DateTime?
  approved_by  String?
  started_at   DateTime?
  started_by   String?
  finished_at  DateTime?
  finished_by  String?
  status       String?        @default("Wait-app")
  progress     Int?           @default(0)
  fileName     String?
  file_hasil     String?
  created_at   DateTime?      @default(now())
  created_by   String?
  updated_at   DateTime?      @updatedAt
  deleted_at   DateTime?
  Notification Notification[]
}

model Notification {
  id         Int       @id @default(autoincrement())
  timeStamp  String
  message    String
  task       task      @relation(fields: [taskId], references: [id])
  taskId     Int
  created_at DateTime? @default(now())
}

model uploadHistory {
  id         Int      @id @default(autoincrement())
  fileName   String
  filePath   String
  user       m_user   @relation(fields: [userId], references: [u_id])
  userId     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
